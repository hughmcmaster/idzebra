dnl Zebra, Index Data Aps, 1994-1999
dnl $Id: configure.in,v 1.15 2000-02-04 08:49:26 adam Exp $
dnl See the file LICENSE.2 for details.
dnl
AC_INIT(include/zebraver.h)
dnl ------ Substitutions
AC_SUBST(ODEFS)
AC_SUBST(DEFS)
AC_SUBST(TCL_INCLUDE)
AC_SUBST(TCL_LIB)
AC_SUBST(YAZLIB)
AC_SUBST(YAZINC)
AC_SUBST(SUBDIR)
AC_SUBST(SUBLIBS)
AC_SUBST(PROGPREFIX)
dnl
dnl ------ Checking programs
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB
dnl
dnl ------ Create sub directory lib/bin
if test ! -d lib; then
	mkdir lib
fi
if test ! -d bin; then
	mkdir bin
fi
dnl ------ Build root
AC_SUBST(build_root)
AC_ARG_WITH(build-root, [  --with-buildroot        RPM Build root],[build_root=$withval],[build_root=""])
dnl
dnl ------ Look for Yaz
dnl See if user specified location of yaz-config; otherwise
dnl use ../yaz if is a directory (internal development); otherwise
dnl use yaz-config found in PATH.
yazconfig=NONE
yazpath=NONE
AC_ARG_WITH(yazconfig, [  --with-yazconfig=DIR    yaz-config in DIR (example /home/yaz-1.5)], [yazpath=$withval])
if test "x$yazpath" != "xNONE"; then
	yazconfig=$yazpath/yaz-config
else
	for i in ../yaz* ../yaz; do
		if test -d $i; then
			if test -r $i/include/yaz/yaz-version.h; then
				yazconfig=$i/yaz-config
			fi
		fi
	done
	if test "x$yazconfig" = "xNONE"; then
		AC_PATH_PROG(yazconfig, yaz-config, NONE)
	fi
fi
AC_MSG_CHECKING(for YAZ)
if test -r $yazconfig; then
	. $yazconfig
	AC_MSG_RESULT($yazconfig)
else
	AC_MSG_RESULT(Not found)
fi
dnl
dnl ------ Look for Tcl
dnl See if user has specified location of tclConfig.sh; otherwise
dnl see if tclConfig.sh exists in same prefix lcoation as tclsh; otherwise
dnl disable Tcl.
TCL_LIB=""
TCL_INCLUDE=""
tclconfig=NONE
AC_ARG_WITH(tclconfig, [  --with-tclconfig=DIR    tclConfig.sh in DIR], [tclconfig=$withval])
if test "x$tclconfig" = xNONE; then
	saveprefix=${prefix}
	AC_PREFIX_PROGRAM(tclsh)
	tclconfig=${prefix}/lib
	prefix=${saveprefix}
fi
AC_MSG_CHECKING(for Tcl)
if test -r ${tclconfig}/tclConfig.sh; then
	. ${tclconfig}/tclConfig.sh
	if test -r ${tclconfig}/../generic/tcl.h; then
		TCL_INCLUDE=-I${tclconfig}/../generic
		TCL_LIB="$TCL_BUILD_LIB_SPEC $TCL_LIBS"
 	else
		TCL_INCLUDE=-I${TCL_PREFIX}/include
		TCL_LIB="$TCL_LIB_SPEC $TCL_LIBS"
	fi
        SHLIB_CFLAGS=$TCL_SHLIB_CFLAGS
        SHLIB_LD=$TCL_SHLIB_LD
        SHLIB_SUFFIX=$TCL_SHLIB_SUFFIX
        SHLIB_VERSION=$TCL_SHLIB_VERSION
        AC_MSG_RESULT($TCL_VERSION)
	ODEFS="-DHAVE_TCL_H=1"
else
        AC_MSG_RESULT(Not found)
	ODEFS="-DHAVE_TCL_H=0"
fi
dnl
dnl ------ times
AC_CHECK_HEADERS(sys/times.h)
dnl
dnl ------- BZIP2
AC_CHECK_LIB(bz2,bzCompressInit)
if test "$ac_cv_lib_bz2_bzCompressInit" = "yes"; then
	AC_CHECK_HEADERS(bzlib.h)
fi
dnl
dnl ------ ANSI C Header files
AC_STDC_HEADERS
if test "$ac_cv_header_stdc" = "no"; then
	AC_MSG_WARN(Your system doesn't seem to support ANSI C)
fi
dnl
dnl ------ Is it Zebra or Z'mbol
if test -r LICENSE.zmbol; then
	AC_DEFINE(ZMBOL,1)
	PROGPREFIX=zmbol
	SUBDIR="util bfile dfa dict isams isamc isam rset recctrl index"
	SUBLIBS="../lib/rset.a ../lib/dict.a ../lib/isams.a ../lib/isam.a\
 ../lib/recctrl.a ../lib/isamc.a ../lib/bfile.a ../lib/dfa.a\
 ../lib/zebrautl.a"
else
	PROGPREFIX=zebra
	SUBDIR="util bfile dfa dict isams rset recctrl index"
	SUBLIBS="../lib/rset.a ../lib/dict.a ../lib/isams.a\
 ../lib/recctrl.a ../lib/bfile.a ../lib/dfa.a\
 ../lib/zebrautl.a"
	AC_DEFINE(ZMBOL,0)
	if test ! -d isamc; then
		mkdir isamc
	fi
	if test ! -r isamc/Makefile.in; then
		touch isamc/Makefile.in
	fi
	if test ! -d isam; then
		mkdir isam
	fi
	if test ! -r isam/Makefile.in; then
		touch isam/Makefile.in
	fi
fi
dnl
dnl ------ Create Makefiles
AC_OUTPUT(Makefile util/Makefile bfile/Makefile dfa/Makefile dict/Makefile isams/Makefile isam/Makefile isamc/Makefile recctrl/Makefile rset/Makefile index/Makefile)
