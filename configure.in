dnl Zebra, Index Data Aps, 1995-2002
dnl $Id: configure.in,v 1.47 2002-09-09 09:36:24 adam Exp $
dnl
AC_INIT(include/zebraver.h)
AM_INIT_AUTOMAKE(idzebra,1.3.2)
dnl ------ Substitutions
AC_SUBST(TCL_INCLUDE)
AC_SUBST(TCL_LIB)
dnl
dnl ------ Checking programs
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB
dnl
dnl ----- DOCBOOK DTD
AC_SUBST(DTD_DIR)
AC_ARG_WITH(dtd, [  --with-dtd[=DIR]        Use docbookx.dtd in DIR],
[
   if test -f "$withval/docbookx.dtd"; then
      DTD_DIR=$withval
   fi
],[
   AC_MSG_CHECKING(for docbookx.dtd)
   for d in /usr/share/sgml/docbook/dtd/xml/4.1.2 \
         /usr/share/sgml/docbook/xml-dtd-4.1.2 \
         /usr/share/sgml/docbook/xml-dtd-4.1 \
         /usr/share/sgml/docbook/dtd/xml/4.0 \
	    /usr/lib/sgml/dtd/docbook-xml 
   do
     if test -f $d/docbookx.dtd; then
       AC_MSG_RESULT($d)
       DTD_DIR=$d
       break
     fi
   done
   if test -z "$DTD_DIR"; then
      AC_MSG_RESULT(Not found)
   fi
])
AC_SUBST(DSSSL_DIR)
AC_ARG_WITH(dsssl,[  --with-dsssl[=DIR]      Use DSSSL in DIR/{html,print}/docbook.dsl],
[
   if test -f "$withval/html/docbook.dsl"; then
      DSSSL_DIR=$withval
   fi
],[
   AC_MSG_CHECKING(for docbook.dsl)
   for d in /usr/share/sgml/docbook/stylesheet/dsssl/modular \
            /usr/share/sgml/docbook/dsssl-stylesheets-1.64 \
            /usr/share/sgml/docbook/dsssl-stylesheets-1.59 \
            /usr/lib/sgml/stylesheet/dsssl/docbook/nwalsh 
   do
     if test -f $d/html/docbook.dsl; then
       AC_MSG_RESULT($d)
       DSSSL_DIR=$d
       break
     fi
   done
   if test -z "$DSSSL_DIR"; then
      AC_MSG_RESULT(Not found)
   fi
])
dnl
AC_ARG_ENABLE(threads, [  --disable-threads       disable threads],[enable_threads=$enableval],[enable_threads=yes])
if test "$enable_threads" = "yes"; then
	yazflag=threads
else
	yazflag=""
fi
YAZ_INIT($yazflag)

dnl ------ Look for Tcl
dnl See if user has specified location of tclConfig.sh; otherwise
dnl see if tclConfig.sh exists in same prefix lcoation as tclsh; otherwise
dnl disable Tcl.
TCL_LIB=""
TCL_INCLUDE=""
tclconfig=NONE
AC_ARG_WITH(tclconfig, [  --with-tclconfig=DIR    tclConfig.sh in DIR], [tclconfig=$withval])
if test "x$tclconfig" = xNONE; then
	saveprefix=${prefix}
	AC_PREFIX_PROGRAM(tclsh)
	tclconfig=${prefix}/lib
	prefix=${saveprefix}
	if test ! -r ${tclconfig}/tclConfig.sh; then
		# Not found, try search for Tcl on Debian systems.
		for d in /usr/lib/tcl*; do
			if test -f $d/tclConfig.sh; then
				tclconfig=$d
			fi
		done
	fi
fi
AC_MSG_CHECKING(for Tcl)
if test -r ${tclconfig}/tclConfig.sh; then
	. ${tclconfig}/tclConfig.sh
	if test -r ${tclconfig}/../generic/tcl.h; then
		TCL_INCLUDE=-I${tclconfig}/../generic
		TCL_LIB="$TCL_BUILD_LIB_SPEC $TCL_LIBS"
 	elif test -d ${TCL_PREFIX}/include/tcl${TCL_VERSION}; then
		TCL_INCLUDE=-I${TCL_PREFIX}/include/tcl${TCL_VERSION}
		TCL_LIB="$TCL_LIB_SPEC $TCL_LIBS"
	else
		TCL_INCLUDE=-I${TCL_PREFIX}/include
		TCL_LIB="$TCL_LIB_SPEC $TCL_LIBS"
	fi
        SHLIB_CFLAGS=$TCL_SHLIB_CFLAGS
        SHLIB_LD=$TCL_SHLIB_LD
        SHLIB_SUFFIX=$TCL_SHLIB_SUFFIX
        SHLIB_VERSION=$TCL_SHLIB_VERSION
        AC_MSG_RESULT($TCL_VERSION)
	AC_DEFINE(HAVE_TCL_H,1)
else
        AC_MSG_RESULT(Not found)
	AC_DEFINE(HAVE_TCL_H,0)
fi
dnl
dnl ------ times
AC_CHECK_HEADERS(sys/times.h iconv.h)
dnl ------ mkstemp
AC_CHECK_FUNCS(mkstemp)
dnl
dnl ------- BZIP2
AC_CHECK_LIB(bz2,bzCompressInit)
if test "$ac_cv_lib_bz2_bzCompressInit" = "yes"; then
	AC_CHECK_HEADERS(bzlib.h)
else
	AC_CHECK_LIB(bz2,BZ2_bzCompressInit)
	if test "$ac_cv_lib_bz2_BZ2_bzCompressInit" = "yes"; then
		AC_CHECK_HEADERS(bzlib.h)
	fi
fi
dnl
dnl ------ EXPAT
expat=yes
AC_ARG_WITH(expat,   [  --with-expat[=DIR]      EXPAT library in DIR],[expat=$withval])
if test "$expat" != "no"; then
	xLIBS="$LIBS";
	xCFLAGS="$CFLAGS";
	if test "$expat" != "yes"; then
                EXPAT_CFLAGS="-I$expat/include"
                EXPAT_LIBS="-L$expat/lib"
		CFLAGS="$EXPAT_CFLAGS $CFLAGS"
		LIBS="$EXPAT_LIBS $LIBS"
	fi
	AC_CHECK_LIB(expat,XML_ParserCreate,[LIBS="$LIBS -lexpat"])
	if test "$ac_cv_lib_expat_XML_ParserCreate" = "yes"; then
		AC_CHECK_HEADERS(expat.h)
	else
		LIBS="$xLIBS"
		CFLAGS="$xCFLAGS"
	fi
fi
dnl ------- 64 bit files
AC_MSG_CHECKING(for LFS)
AC_TRY_RUN([#define _FILE_OFFSET_BITS 64
#include <sys/types.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>
#include <fcntl.h>
#include <errno.h>
int main(int argc, char **argv)
{
	off_t o;
	char tmp_str[32];
	int fd;
	struct flock area;
	if (sizeof(off_t) != 8) 
		exit (1);
	o = 2000000000;
	sprintf (tmp_str, "%Ld", o+o+o);
	if (strcmp (tmp_str, "6000000000"))
		exit (1);
	fd = creat ("config.tmp", 0644);
	if (fd < 0)
		exit (1);
	area.l_type = F_WRLCK;
	area.l_whence = SEEK_SET;
	area.l_len = area.l_start = 0L;
	if (fcntl(fd, F_SETLKW, &area))
		exit (1);
	close (fd);
	unlink ("config.tmp");
	exit (0);
}
],bits=64,bits=32,bits=32)
if test "$bits" = "64"; then
	AC_DEFINE(_FILE_OFFSET_BITS,64)
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi
dnl
dnl ------ ANSI C Header files
AC_STDC_HEADERS
if test "$ac_cv_header_stdc" = "no"; then
	AC_MSG_WARN(Your system doesn't seem to support ANSI C)
fi
dnl ------ Create Makefiles
AC_OUTPUT([
  Makefile
  util/Makefile
  bfile/Makefile
  dfa/Makefile
  dict/Makefile
  isamb/Makefile
  isams/Makefile
  isamc/Makefile
  isam/Makefile
  rset/Makefile
  recctrl/Makefile
  index/Makefile
  include/Makefile
  tab/Makefile
  doc/Makefile
  doc/zebra.xml
  doc/zebrahtml.dsl
  doc/zebraprint.dsl
  doc/zebraphp.dsl
  test/Makefile test/gils/Makefile test/usmarc/Makefile test/api/Makefile
  test/dmoz/Makefile
])
