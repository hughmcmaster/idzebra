<chapter id="installation">

<title>Installation</title>

<para>
An ANSI C compiler is required to compile the Zebra
server system &mdash; <literal remap="tt">gcc</literal> works fine if your own system doesn't
provide an adequate compiler.
</para>

<para>
Unpack the distribution archive. The <literal remap="tt">configure</literal> shell script
attempts to guess correct values for various system-dependent variables
used during compilation. It uses those values to create a 'Makefile' in
each directory of Zebra.
</para>

<para>
To run the configure script type:

<screen>
  ./configure
</screen>

</para>

<para>
The configure script attempts to use C compiler specified by
the <literal remap="tt">CC</literal> environment variable. If not set, <literal remap="tt">cc</literal>
will be used. The <literal remap="tt">CFLAGS</literal> environment variable holds
options to be passed to the C compiler. If you're using a Bourne-shell
compatible shell you may pass something like this:

<screen>
  CC=/opt/ccs/bin/cc CFLAGS=-O ./configure
</screen>

</para>

<para>
When configured build the software by typing:

<screen>
  make
</screen>
 
</para>

<para>
As an option you may type <literal remap="tt">make depend</literal> to create
source file dependencies for the package. This is only needed,
however, if you alter the source.
</para>

<para>
If successful, two executables have been created in the sub-directory
<literal remap="tt">index</literal>.
<variablelist>

<varlistentry>
<term><literal remap="tt">zebrasrv</literal></term>
<listitem>
<para>
The Z39.50 server and search engine.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal remap="tt">zebraidx</literal></term>
<listitem>
<para>
The administrative tool for the search index.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</chapter>
